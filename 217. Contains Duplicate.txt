// Method 1 - Direct Solution
class Solution {
    public boolean containsDuplicate(int[] nums) {
        for (int i = 0; i < nums.length; i++){
            for (int j = i+1; j < nums.length; j++){
                if (nums[i] == nums[j]){
                    return true;
                }
            }
        }
        return false;
    }
}

// Method 2 - Neighbour Comparison
class Solution {
    public boolean containsDuplicate(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        for (int i = 0; i < n-1; i++){
            if (nums[i] == nums[i+1]){
                return true;
            }
        }
        return false;
    }
}

// Method 3 - Hash
class Solution {
    public boolean containsDuplicate(int[] nums) {
        Set<Integer> hashT = new HashSet<Integer>();
        for (int n:nums){
            if (!hashT.add(n)){
                return true;
            }
        }
        return false;
    }
}